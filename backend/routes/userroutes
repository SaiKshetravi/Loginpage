
const express=require('express');
const router=express.Router();
const bcrypt=require('bcrypt');
const jwt=require('jsonwebtoken');
const saltRound=10;
const userdata=require('../modules/userdata');
require("dotenv").config();

router.get('/userdata',(req,res)=>{
res.json({message:"userdata",userdata:userdata});
});


router.post('/signup',async(req,res)=>{
    const data=req.body;
    const temp={};

temp.username=data.signupUsername;
temp.password=data.signupPassword;
    console.log("entered data:", data);

    
     const existingUsername = userdata.filter(user => user.username === data.signupUsername);

    if (existingUsername.length > 0) {
        console.log("Username already exists");
        return res.status(400).json({ message: "Username already exists",status:false });
    }
    
const enterpassword=temp.password;
console.log(" entered password: ", enterpassword);
    const hashedpassword= await bcrypt.hash(temp.password,saltRound);
    temp.password=hashedpassword;
    console.log("hashed Password "+hashedpassword);
    
    let accesstoken= jwt.sign(temp,process.env.SECURITY_KEY,{expiresIn:'1d'})

    temp.accesstoken=accesstoken;

    userdata.push(temp);


    console.log("User created successfully" , userdata);
  return res.status(200).json({ message: "User created successfully", userdata ,status:"success"});
});






router.post('/login',async(req,res)=>{
    const data=req.body;
    console.log("login data", data);
    const isUserExits=userdata.filter(user=>user.username===data.loginUsername);
    console.log("isUserExits",isUserExits[0]);
    if(isUserExits.length>0){
       const databasepassword=isUserExits[0].password;
               const isPasswordValid= await bcrypt.compare(data.loginPassword,databasepassword);
               console.log("valid password" ,isPasswordValid)
               if(isPasswordValid){
                const token =isUserExits[0].accesstoken;
                try{
                const result=jwt.verify(token,process.env.SECURITY_KEY)
                res.status(200).json({message:"login successful",userdata:result,status:"success"})
                console.log("login successfull");
                }
                catch(error){
                        res.status(400).json({msg:"Session Expired",})

                }
                // console.log(await result);
                // console.log("token result"+JSON.stringify(result));
                // console.log("login successful");
               }
               else{
                console.log("login failed");
                return res.status(400).json({message:"login failed due to invalid passworrd",status:"failed"});

               }

    }
    else{
        console.log("user does not exists");
        return res.status(400).json({message:'user does not exist',status:"failed"});
    }
    
    

});






router.get('/getdata',(req,res)=>{
    res.send('UserID: (req.params.id');
});
module.exports=router;